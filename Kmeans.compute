// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel imageprogress
//#pragma kernel distance
Texture2D<float4> srcTexture;
//float ar, ag, ab, br, bg, bb;
// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
//RWStructuredBuffer<float> dist;


[numthreads(8, 8, 1)]
void imageprogress(uint3 id : SV_DispatchThreadID)
{
	float4 centerColor = 0;
	for (int k = -2; k < 3; k++) {
		for (int l = -2; l < 3; l++) {
			centerColor += srcTexture[id.xy + (k, l)];//これあってない気する
		}
	}
	centerColor = centerColor / 25;
	centerColor.w = 1;
	Result[id.xy] = centerColor;
}
/*
[numthreads(8,8,1)]
void distance(uint3 id : SV_DispatchThreadID)
{
	dist = pow(ar - br, 2) + pow(ag - bg, 2) + pow(ab - bb, 2);
}*/